{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import { BuilderContext, BuilderOutput, createBuilder } from '@angular-devkit/architect';\r\nimport { json } from '@angular-devkit/core';\r\nimport { Schema } from './schema';\r\n\r\nconst NetlifyAPI = require('netlify');\r\n\r\nexport default createBuilder<any>(\r\n  async (builderConfig: Schema, context: BuilderContext): Promise<BuilderOutput> => {\r\n    context.reportStatus(`Executing deploy...`);\r\n    context.logger.info(`Executing netlify deploy command ...... `);\r\n    let buildResult;\r\n    if (builderConfig.noBuild) {\r\n      context.logger.info(`üì¶ Skipping build`);\r\n      buildResult = true;\r\n    } else {\r\n      const configuration = builderConfig.configuration ? builderConfig.configuration : 'production';\r\n\r\n      const overrides = {\r\n        // this is an example how to override the workspace set of options\r\n        ...(builderConfig.baseHref && { baseHref: builderConfig.baseHref })\r\n      };\r\n\r\n      if (!context.target) {\r\n        throw new Error('Cannot deploy the application without a target');\r\n      }\r\n\r\n      context.logger.info(`üì¶ Building \"${context.target.project}\". Configuration: \"${configuration}\".${builderConfig.baseHref ? ' Your base-href: \"' + builderConfig.baseHref + '\"' : ''}`);\r\n\r\n      const build = await context.scheduleTarget({\r\n        target: 'build',\r\n        project: context.target !== undefined ? context.target.project : '',\r\n        configuration\r\n      }, overrides as json.JsonObject);\r\n\r\n      buildResult = await build.result;\r\n    }\r\n\r\n    if (buildResult.success || buildResult) {\r\n      context.logger.info(`‚úî Build Completed`);\r\n      const netlifyToken = process.env.NETLIFY_TOKEN || builderConfig.netlifyToken;\r\n      if (netlifyToken == '' || netlifyToken == undefined) {\r\n        context.logger.error(\"üö® Netlify Token not found !\");\r\n        return { success: false };\r\n      }\r\n      const client = new NetlifyAPI(netlifyToken,\r\n        {\r\n          userAgent: 'netlify/js-client',\r\n          scheme: 'https',\r\n          host: 'api.netlify.com',\r\n          pathPrefix: '/api/v1',\r\n          globalParams: {}\r\n        });\r\n      let sites;\r\n      try {\r\n        sites = await client.listSites();\r\n      } catch (e) {\r\n        context.logger.error(\"üö® Netlify Token Rejected\");\r\n        return { success: false };\r\n      }\r\n      context.logger.info(`‚úî User Verified`);\r\n      const siteId = process.env.NETLIFY_API_ID || builderConfig.siteId;\r\n      if (siteId == '' || siteId == undefined) {\r\n        context.logger.error(\"üö® API ID (Site ID) not found !\");\r\n        return { success: false };\r\n      }\r\n      const isSiteValid = sites.find(site => siteId === site.site_id);\r\n      if (isSiteValid) {\r\n        context.logger.info(`‚úî Site ID Confirmed`);\r\n\r\n        const response = await client.deploy(siteId, builderConfig.outputPath);\r\n        context.logger.info(`Deploying project from the location üìÇ  ./\"${builderConfig.outputPath}`);\r\n        context.logger.info(`\\n ‚úî Your updated site üï∏ is running at ${response && response.deploy && response.deploy.ssl_url}`);\r\n\r\n        return { success: true };\r\n      }\r\n      else {\r\n        context.logger.error(`‚ùå Site ID not found`);\r\n        return { success: false };\r\n      }\r\n    } else {\r\n      context.logger.error(`‚ùå Application build failed`);\r\n      return {\r\n        error: `‚ùå Application build failed`,\r\n        success: false\r\n      };\r\n    }\r\n\r\n  });"]}